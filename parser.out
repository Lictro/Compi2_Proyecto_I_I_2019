State 0:
          program ::= * KWCLASS ID OPENCUR field_decl methods_field CLOSECUR

                       KWCLASS shift        102    
                       program accept

State 1:
          block ::= OPENCUR * statements CLOSECUR
          statements ::= * statements statement
          statements ::= * statement
     (28) statements ::= *
          statement ::= * assign SEMICOLON
          statement ::= * method_call SEMICOLON
          statement ::= * if_st
          statement ::= * while
          statement ::= * KWRETURN condition SEMICOLON
          statement ::= * KWRETURN SEMICOLON
          statement ::= * KWBREAK SEMICOLON
          statement ::= * KWCONTINUE SEMICOLON
          statement ::= * for_st
          assign ::= * lvalue OPASSIGN condition
          method_call ::= * ID OPENPAR exprs_list CLOSEPAR
          method_call ::= * SOP OPENPAR arguments CLOSEPAR
          method_call ::= * SOPLN OPENPAR arguments CLOSEPAR
          method_call ::= * SOR OPENPAR CLOSEPAR
          method_call ::= * RANDOM OPENPAR condition CLOSEPAR
          if_st ::= * KWIF OPENPAR condition CLOSEPAR block opt_else
          while ::= * KWWHILE OPENPAR condition CLOSEPAR block
          for_st ::= * KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA

                            ID shift        63     
                            ID reduce       28      ** Parsing conflict **
                      KWRETURN shift        7      
                      KWRETURN reduce       28      ** Parsing conflict **
                       KWBREAK shift        86     
                       KWBREAK reduce       28      ** Parsing conflict **
                    KWCONTINUE shift        85     
                    KWCONTINUE reduce       28      ** Parsing conflict **
                           SOP shift        93     
                           SOP reduce       28      ** Parsing conflict **
                         SOPLN shift        92     
                         SOPLN reduce       28      ** Parsing conflict **
                           SOR shift        91     
                           SOR reduce       28      ** Parsing conflict **
                        RANDOM shift        89     
                        RANDOM reduce       28      ** Parsing conflict **
                          KWIF shift        83     
                          KWIF reduce       28      ** Parsing conflict **
                       KWWHILE shift        81     
                       KWWHILE reduce       28      ** Parsing conflict **
                         KWFOR shift        79     
                         KWFOR reduce       28      ** Parsing conflict **
                    statements shift        4      
                     statement shift-reduce 27     statements ::= statement
                        assign shift        97     
                   method_call shift        96     
                         if_st shift-reduce 31     statement ::= if_st
                         while shift-reduce 32     statement ::= while
                        for_st shift-reduce 37     statement ::= for_st
                        lvalue shift        84     
                     {default} reduce       28     statements ::=

State 2:
          method_call ::= SOPLN OPENPAR * arguments CLOSEPAR
          arguments ::= * arguments COMMA argument
          arguments ::= * argument
          argument ::= * condition
          argument ::= * STRLIT
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                        STRLIT shift-reduce 57     argument ::= STRLIT
                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 56     argument ::= condition
                     arguments shift        60     
                      argument shift-reduce 55     arguments ::= argument
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 3:
          method_call ::= SOP OPENPAR * arguments CLOSEPAR
          arguments ::= * arguments COMMA argument
          arguments ::= * argument
          argument ::= * condition
          argument ::= * STRLIT
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                        STRLIT shift-reduce 57     argument ::= STRLIT
                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 56     argument ::= condition
                     arguments shift        61     
                      argument shift-reduce 55     arguments ::= argument
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 4:
          block ::= OPENCUR statements * CLOSECUR
          statements ::= statements * statement
          statement ::= * assign SEMICOLON
          statement ::= * method_call SEMICOLON
          statement ::= * if_st
          statement ::= * while
          statement ::= * KWRETURN condition SEMICOLON
          statement ::= * KWRETURN SEMICOLON
          statement ::= * KWBREAK SEMICOLON
          statement ::= * KWCONTINUE SEMICOLON
          statement ::= * for_st
          assign ::= * lvalue OPASSIGN condition
          method_call ::= * ID OPENPAR exprs_list CLOSEPAR
          method_call ::= * SOP OPENPAR arguments CLOSEPAR
          method_call ::= * SOPLN OPENPAR arguments CLOSEPAR
          method_call ::= * SOR OPENPAR CLOSEPAR
          method_call ::= * RANDOM OPENPAR condition CLOSEPAR
          if_st ::= * KWIF OPENPAR condition CLOSEPAR block opt_else
          while ::= * KWWHILE OPENPAR condition CLOSEPAR block
          for_st ::= * KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA

                            ID shift        63     
                      CLOSECUR shift-reduce 25     block ::= OPENCUR statements CLOSECUR
                      KWRETURN shift        7      
                       KWBREAK shift        86     
                    KWCONTINUE shift        85     
                           SOP shift        93     
                         SOPLN shift        92     
                           SOR shift        91     
                        RANDOM shift        89     
                          KWIF shift        83     
                       KWWHILE shift        81     
                         KWFOR shift        79     
                     statement shift-reduce 26     statements ::= statements statement
                        assign shift        97     
                   method_call shift        96     
                         if_st shift-reduce 31     statement ::= if_st
                         while shift-reduce 32     statement ::= while
                        for_st shift-reduce 37     statement ::= for_st
                        lvalue shift        84     

State 5:
          method_call ::= ID OPENPAR * exprs_list CLOSEPAR
          exprs_list ::= * exprs_list COMMA condition
          exprs_list ::= * condition
     (53) exprs_list ::= *
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         COMMA reduce       53     exprs_list ::=
                      CLOSEPAR reduce       53     exprs_list ::=
                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 52     exprs_list ::= condition
                    exprs_list shift        62     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 6:
          arguments ::= arguments COMMA * argument
          argument ::= * condition
          argument ::= * STRLIT
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                        STRLIT shift-reduce 57     argument ::= STRLIT
                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 56     argument ::= condition
                      argument shift-reduce 54     arguments ::= arguments COMMA argument
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 7:
          statement ::= KWRETURN * condition SEMICOLON
          statement ::= KWRETURN * SEMICOLON
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                     SEMICOLON shift-reduce 34     statement ::= KWRETURN SEMICOLON
                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        95     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 8:
          for_st ::= KWFOR OPENPAR list_asignings SEMICOLON * condition SEMICOLON list_asignings CLOSEPAR block
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        78     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 9:
          while ::= KWWHILE OPENPAR * condition CLOSEPAR block
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        80     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 10:
          if_st ::= KWIF OPENPAR * condition CLOSEPAR block opt_else
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        82     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 11:
          assign ::= lvalue OPASSIGN * condition
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 38     assign ::= lvalue OPASSIGN condition
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 12:
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR
          factor ::= unary OPENPAR * condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        87     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 13:
          method_call ::= RANDOM OPENPAR * condition CLOSEPAR
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        88     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 14:
          lvalue ::= ID OPENBRA * condition CLOSEBRA
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift        94     
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 15:
          exprs_list ::= exprs_list COMMA * condition
          condition ::= * logic_expr
          condition ::= * logic_expr AND logic_expr
          condition ::= * logic_expr OR logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                     condition shift-reduce 51     exprs_list ::= exprs_list COMMA condition
                    logic_expr shift        65     
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 16:
          program ::= KWCLASS ID OPENCUR field_decl * methods_field CLOSECUR
          field_decl ::= field_decl * decl SEMICOLON
          decl ::= * type list_decl
          type ::= * KWINT
          type ::= * KWBOOL
          methods_field ::= * methods_field sub_program
          methods_field ::= * sub_program
     (18) methods_field ::= *
          sub_program ::= * method_type ID OPENPAR params CLOSEPAR block
          method_type ::= * type
          method_type ::= * KWVOID

                         KWINT shift-reduce 9      type ::= KWINT
                         KWINT reduce       18      ** Parsing conflict **
                        KWBOOL shift-reduce 10     type ::= KWBOOL
                        KWBOOL reduce       18      ** Parsing conflict **
                        KWVOID shift-reduce 21     method_type ::= KWVOID
                        KWVOID reduce       18      ** Parsing conflict **
                 methods_field shift        26     
                          decl shift        74     
                          type shift        42     
                   sub_program shift-reduce 17     methods_field ::= sub_program
                   method_type shift        99     
                     {default} reduce       18     methods_field ::=

State 17:
          condition ::= logic_expr OR * logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                    logic_expr shift-reduce 62     condition ::= logic_expr OR logic_expr
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 18:
          condition ::= logic_expr AND * logic_expr
          logic_expr ::= * aritexpr MAYOR aritexpr
          logic_expr ::= * aritexpr MENOR aritexpr
          logic_expr ::= * aritexpr MAYORIGUAL aritexpr
          logic_expr ::= * aritexpr MENORIGUAL aritexpr
          logic_expr ::= * aritexpr IGUAL aritexpr
          logic_expr ::= * aritexpr DISTINTO aritexpr
          logic_expr ::= * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                    logic_expr shift-reduce 61     condition ::= logic_expr AND logic_expr
                      aritexpr shift        49     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 19:
          logic_expr ::= aritexpr DISTINTO * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        55     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 20:
          logic_expr ::= aritexpr IGUAL * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        56     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 21:
          logic_expr ::= aritexpr MENORIGUAL * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        57     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 22:
          logic_expr ::= aritexpr MAYORIGUAL * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        58     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 23:
          logic_expr ::= aritexpr MENOR * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        59     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 24:
          logic_expr ::= aritexpr MAYOR * aritexpr
          aritexpr ::= * aritexpr SUMA term
          aritexpr ::= * aritexpr RESTA term
          aritexpr ::= * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                      aritexpr shift        64     
                          term shift        51     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 25:
          constant ::= * NUMBER
          constant ::= * KWTRUE
          constant ::= * KWFALSE
          method_call ::= * ID OPENPAR exprs_list CLOSEPAR
          method_call ::= * SOP OPENPAR arguments CLOSEPAR
          method_call ::= * SOPLN OPENPAR arguments CLOSEPAR
          method_call ::= * SOR OPENPAR CLOSEPAR
          method_call ::= * RANDOM OPENPAR condition CLOSEPAR
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA
          factor ::= unary * constant
          factor ::= unary * lvalue
          factor ::= unary * method_call
          factor ::= unary * OPENPAR condition CLOSEPAR

                            ID shift        63     
                        NUMBER shift-reduce 13     constant ::= NUMBER
                        KWTRUE shift-reduce 14     constant ::= KWTRUE
                       KWFALSE shift-reduce 15     constant ::= KWFALSE
                       OPENPAR shift        12     
                           SOP shift        93     
                         SOPLN shift        92     
                           SOR shift        91     
                        RANDOM shift        89     
                      constant shift-reduce 80     factor ::= unary constant
                   method_call shift-reduce 82     factor ::= unary method_call
                        lvalue shift-reduce 81     factor ::= unary lvalue

State 26:
          program ::= KWCLASS ID OPENCUR field_decl methods_field * CLOSECUR
          type ::= * KWINT
          type ::= * KWBOOL
          methods_field ::= methods_field * sub_program
          sub_program ::= * method_type ID OPENPAR params CLOSEPAR block
          method_type ::= * type
          method_type ::= * KWVOID

                      CLOSECUR shift        100    
                         KWINT shift-reduce 9      type ::= KWINT
                        KWBOOL shift-reduce 10     type ::= KWBOOL
                        KWVOID shift-reduce 21     method_type ::= KWVOID
                          type shift-reduce 20     method_type ::= type
                   sub_program shift-reduce 16     methods_field ::= methods_field sub_program
                   method_type shift        99     

State 27:
          aritexpr ::= aritexpr RESTA * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                          term shift        50     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 28:
          aritexpr ::= aritexpr SUMA * term
          term ::= * term MUL factor
          term ::= * term DIV factor
          term ::= * term MOD factor
          term ::= * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                          term shift        52     
                        factor shift-reduce 76     term ::= factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 29:
          program ::= KWCLASS ID OPENCUR * field_decl methods_field CLOSECUR
          field_decl ::= * field_decl decl SEMICOLON
          field_decl ::= * decl SEMICOLON
      (3) field_decl ::= *
          decl ::= * type list_decl
          type ::= * KWINT
          type ::= * KWBOOL

                         KWINT shift-reduce 9      type ::= KWINT
                         KWINT reduce       3       ** Parsing conflict **
                        KWBOOL shift-reduce 10     type ::= KWBOOL
                        KWBOOL reduce       3       ** Parsing conflict **
                    field_decl shift        16     
                          decl shift        67     
                          type shift        41     
                     {default} reduce       3      field_decl ::=

State 30:
          assign ::= * lvalue OPASSIGN condition
          for_st ::= KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON * list_asignings CLOSEPAR block
          list_asignings ::= * list_asignings COMMA assign
          list_asignings ::= * assign
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA

                            ID shift        77     
                        assign shift-reduce 50     list_asignings ::= assign
                        lvalue shift        84     
                list_asignings shift        53     

State 31:
          assign ::= * lvalue OPASSIGN condition
          for_st ::= KWFOR OPENPAR * list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block
          list_asignings ::= * list_asignings COMMA assign
          list_asignings ::= * assign
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA

                            ID shift        77     
                        assign shift-reduce 50     list_asignings ::= assign
                        lvalue shift        84     
                list_asignings shift        54     

State 32:
          term ::= term MOD * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                        factor shift-reduce 75     term ::= term MOD factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 33:
          term ::= term DIV * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                        factor shift-reduce 74     term ::= term DIV factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 34:
          term ::= term MUL * factor
          unary ::= * RESTA
          unary ::= * NEGAR
     (79) unary ::= *
          factor ::= * unary constant
          factor ::= * unary lvalue
          factor ::= * unary method_call
          factor ::= * unary OPENPAR condition CLOSEPAR

                         RESTA shift-reduce 77     unary ::= RESTA
                         NEGAR shift-reduce 78     unary ::= NEGAR
                        factor shift-reduce 73     term ::= term MUL factor
                         unary shift        25     
                     {default} reduce       79     unary ::=

State 35:
          type ::= * KWINT
          type ::= * KWBOOL
          sub_program ::= method_type ID OPENPAR * params CLOSEPAR block
          params ::= * params COMMA type ID
          params ::= * type ID
     (24) params ::= *

                         KWINT shift-reduce 9      type ::= KWINT
                        KWBOOL shift-reduce 10     type ::= KWBOOL
                          type shift        75     
                        params shift        66     
                     {default} reduce       24     params ::=

State 36:
          assign ::= * lvalue OPASSIGN condition
          list_asignings ::= list_asignings COMMA * assign
          lvalue ::= * ID
          lvalue ::= * ID OPENBRA condition CLOSEBRA

                            ID shift        77     
                        assign shift-reduce 49     list_asignings ::= list_asignings COMMA assign
                        lvalue shift        84     

State 37:
          init ::= OPASSIGN * constant
          constant ::= * NUMBER
          constant ::= * KWTRUE
          constant ::= * KWFALSE

                        NUMBER shift-reduce 13     constant ::= NUMBER
                        KWTRUE shift-reduce 14     constant ::= KWTRUE
                       KWFALSE shift-reduce 15     constant ::= KWFALSE
                      constant shift-reduce 11     init ::= OPASSIGN constant

State 38:
          list_decl ::= ID * OPENBRA NUMBER CLOSEBRA
          list_decl ::= ID * init
          init ::= * OPASSIGN constant
     (12) init ::= *

                       OPENBRA shift        69     
                      OPASSIGN shift        37     
                          init shift-reduce 8      list_decl ::= ID init
                     {default} reduce       12     init ::=

State 39:
          list_decl ::= list_decl COMMA ID * OPENBRA NUMBER CLOSEBRA
          list_decl ::= list_decl COMMA ID * init
          init ::= * OPASSIGN constant
     (12) init ::= *

                       OPENBRA shift        71     
                      OPASSIGN shift        37     
                          init shift-reduce 6      list_decl ::= list_decl COMMA ID init
                     {default} reduce       12     init ::=

State 40:
          type ::= * KWINT
          type ::= * KWBOOL
          params ::= params COMMA * type ID

                         KWINT shift-reduce 9      type ::= KWINT
                        KWBOOL shift-reduce 10     type ::= KWBOOL
                          type shift        76     

State 41:
          decl ::= type * list_decl
          list_decl ::= * list_decl COMMA ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= * list_decl COMMA ID init
          list_decl ::= * ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= * ID init

                            ID shift        38     
                     list_decl shift        73     

State 42:
          decl ::= type * list_decl
          list_decl ::= * list_decl COMMA ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= * list_decl COMMA ID init
          list_decl ::= * ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= * ID init
     (20) method_type ::= type *

                            ID shift        38     
                            ID reduce       20      ** Parsing conflict **
                     list_decl shift        73     

State 43:
          block ::= * OPENCUR statements CLOSECUR
          for_st ::= KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR * block

                       OPENCUR shift        1      
                         block shift-reduce 48     for_st ::= KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block

State 44:
          block ::= * OPENCUR statements CLOSECUR
          while ::= KWWHILE OPENPAR condition CLOSEPAR * block

                       OPENCUR shift        1      
                         block shift-reduce 47     while ::= KWWHILE OPENPAR condition CLOSEPAR block

State 45:
          block ::= * OPENCUR statements CLOSECUR
          opt_else ::= KWELSE * block

                       OPENCUR shift        1      
                         block shift-reduce 45     opt_else ::= KWELSE block

State 46:
          if_st ::= KWIF OPENPAR condition CLOSEPAR block * opt_else
          opt_else ::= * KWELSE block
     (46) opt_else ::= *

                        KWELSE shift        45     
                      opt_else shift-reduce 44     if_st ::= KWIF OPENPAR condition CLOSEPAR block opt_else
                     {default} reduce       46     opt_else ::=

State 47:
          block ::= * OPENCUR statements CLOSECUR
          if_st ::= KWIF OPENPAR condition CLOSEPAR * block opt_else

                       OPENCUR shift        1      
                         block shift        46     

State 48:
          sub_program ::= method_type ID OPENPAR params CLOSEPAR * block
          block ::= * OPENCUR statements CLOSECUR

                       OPENCUR shift        1      
                         block shift-reduce 19     sub_program ::= method_type ID OPENPAR params CLOSEPAR block

State 49:
          logic_expr ::= aritexpr * MAYOR aritexpr
          logic_expr ::= aritexpr * MENOR aritexpr
          logic_expr ::= aritexpr * MAYORIGUAL aritexpr
          logic_expr ::= aritexpr * MENORIGUAL aritexpr
          logic_expr ::= aritexpr * IGUAL aritexpr
          logic_expr ::= aritexpr * DISTINTO aritexpr
     (69) logic_expr ::= aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                         MAYOR shift        24     
                         MENOR shift        23     
                    MAYORIGUAL shift        22     
                    MENORIGUAL shift        21     
                         IGUAL shift        20     
                      DISTINTO shift        19     
                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       69     logic_expr ::= aritexpr

State 50:
     (71) aritexpr ::= aritexpr RESTA term *
          term ::= term * MUL factor
          term ::= term * DIV factor
          term ::= term * MOD factor

                           MUL shift        34     
                           DIV shift        33     
                           MOD shift        32     
                     {default} reduce       71     aritexpr ::= aritexpr RESTA term

State 51:
     (72) aritexpr ::= term *
          term ::= term * MUL factor
          term ::= term * DIV factor
          term ::= term * MOD factor

                           MUL shift        34     
                           DIV shift        33     
                           MOD shift        32     
                     {default} reduce       72     aritexpr ::= term

State 52:
     (70) aritexpr ::= aritexpr SUMA term *
          term ::= term * MUL factor
          term ::= term * DIV factor
          term ::= term * MOD factor

                           MUL shift        34     
                           DIV shift        33     
                           MOD shift        32     
                     {default} reduce       70     aritexpr ::= aritexpr SUMA term

State 53:
          for_st ::= KWFOR OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings * CLOSEPAR block
          list_asignings ::= list_asignings * COMMA assign

                         COMMA shift        36     
                      CLOSEPAR shift        43     

State 54:
          for_st ::= KWFOR OPENPAR list_asignings * SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block
          list_asignings ::= list_asignings * COMMA assign

                     SEMICOLON shift        8      
                         COMMA shift        36     

State 55:
     (68) logic_expr ::= aritexpr DISTINTO aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       68     logic_expr ::= aritexpr DISTINTO aritexpr

State 56:
     (67) logic_expr ::= aritexpr IGUAL aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       67     logic_expr ::= aritexpr IGUAL aritexpr

State 57:
     (66) logic_expr ::= aritexpr MENORIGUAL aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       66     logic_expr ::= aritexpr MENORIGUAL aritexpr

State 58:
     (65) logic_expr ::= aritexpr MAYORIGUAL aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       65     logic_expr ::= aritexpr MAYORIGUAL aritexpr

State 59:
     (64) logic_expr ::= aritexpr MENOR aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       64     logic_expr ::= aritexpr MENOR aritexpr

State 60:
          method_call ::= SOPLN OPENPAR arguments * CLOSEPAR
          arguments ::= arguments * COMMA argument

                         COMMA shift        6      
                      CLOSEPAR shift-reduce 41     method_call ::= SOPLN OPENPAR arguments CLOSEPAR

State 61:
          method_call ::= SOP OPENPAR arguments * CLOSEPAR
          arguments ::= arguments * COMMA argument

                         COMMA shift        6      
                      CLOSEPAR shift-reduce 40     method_call ::= SOP OPENPAR arguments CLOSEPAR

State 62:
          method_call ::= ID OPENPAR exprs_list * CLOSEPAR
          exprs_list ::= exprs_list * COMMA condition

                         COMMA shift        15     
                      CLOSEPAR shift-reduce 39     method_call ::= ID OPENPAR exprs_list CLOSEPAR

State 63:
          method_call ::= ID * OPENPAR exprs_list CLOSEPAR
     (58) lvalue ::= ID *
          lvalue ::= ID * OPENBRA condition CLOSEBRA

                       OPENBRA shift        14     
                       OPENPAR shift        5      
                     {default} reduce       58     lvalue ::= ID

State 64:
     (63) logic_expr ::= aritexpr MAYOR aritexpr *
          aritexpr ::= aritexpr * SUMA term
          aritexpr ::= aritexpr * RESTA term

                          SUMA shift        28     
                         RESTA shift        27     
                     {default} reduce       63     logic_expr ::= aritexpr MAYOR aritexpr

State 65:
     (60) condition ::= logic_expr *
          condition ::= logic_expr * AND logic_expr
          condition ::= logic_expr * OR logic_expr

                           AND shift        18     
                            OR shift        17     
                     {default} reduce       60     condition ::= logic_expr

State 66:
          sub_program ::= method_type ID OPENPAR params * CLOSEPAR block
          params ::= params * COMMA type ID

                         COMMA shift        40     
                      CLOSEPAR shift        48     

State 67:
          field_decl ::= decl * SEMICOLON

                     SEMICOLON shift-reduce 2      field_decl ::= decl SEMICOLON

State 68:
          list_decl ::= ID OPENBRA NUMBER * CLOSEBRA

                      CLOSEBRA shift-reduce 7      list_decl ::= ID OPENBRA NUMBER CLOSEBRA

State 69:
          list_decl ::= ID OPENBRA * NUMBER CLOSEBRA

                        NUMBER shift        68     

State 70:
          list_decl ::= list_decl COMMA ID OPENBRA NUMBER * CLOSEBRA

                      CLOSEBRA shift-reduce 5      list_decl ::= list_decl COMMA ID OPENBRA NUMBER CLOSEBRA

State 71:
          list_decl ::= list_decl COMMA ID OPENBRA * NUMBER CLOSEBRA

                        NUMBER shift        70     

State 72:
          list_decl ::= list_decl COMMA * ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= list_decl COMMA * ID init

                            ID shift        39     

State 73:
      (4) decl ::= type list_decl *
          list_decl ::= list_decl * COMMA ID OPENBRA NUMBER CLOSEBRA
          list_decl ::= list_decl * COMMA ID init

                         COMMA shift        72     
                     {default} reduce       4      decl ::= type list_decl

State 74:
          field_decl ::= field_decl decl * SEMICOLON

                     SEMICOLON shift-reduce 1      field_decl ::= field_decl decl SEMICOLON

State 75:
          params ::= type * ID

                            ID shift-reduce 23     params ::= type ID

State 76:
          params ::= params COMMA type * ID

                            ID shift-reduce 22     params ::= params COMMA type ID

State 77:
     (58) lvalue ::= ID *
          lvalue ::= ID * OPENBRA condition CLOSEBRA

                       OPENBRA shift        14     
                     {default} reduce       58     lvalue ::= ID

State 78:
          for_st ::= KWFOR OPENPAR list_asignings SEMICOLON condition * SEMICOLON list_asignings CLOSEPAR block

                     SEMICOLON shift        30     

State 79:
          for_st ::= KWFOR * OPENPAR list_asignings SEMICOLON condition SEMICOLON list_asignings CLOSEPAR block

                       OPENPAR shift        31     

State 80:
          while ::= KWWHILE OPENPAR condition * CLOSEPAR block

                      CLOSEPAR shift        44     

State 81:
          while ::= KWWHILE * OPENPAR condition CLOSEPAR block

                       OPENPAR shift        9      

State 82:
          if_st ::= KWIF OPENPAR condition * CLOSEPAR block opt_else

                      CLOSEPAR shift        47     

State 83:
          if_st ::= KWIF * OPENPAR condition CLOSEPAR block opt_else

                       OPENPAR shift        10     

State 84:
          assign ::= lvalue * OPASSIGN condition

                      OPASSIGN shift        11     

State 85:
          statement ::= KWCONTINUE * SEMICOLON

                     SEMICOLON shift-reduce 36     statement ::= KWCONTINUE SEMICOLON

State 86:
          statement ::= KWBREAK * SEMICOLON

                     SEMICOLON shift-reduce 35     statement ::= KWBREAK SEMICOLON

State 87:
          factor ::= unary OPENPAR condition * CLOSEPAR

                      CLOSEPAR shift-reduce 83     factor ::= unary OPENPAR condition CLOSEPAR

State 88:
          method_call ::= RANDOM OPENPAR condition * CLOSEPAR

                      CLOSEPAR shift-reduce 43     method_call ::= RANDOM OPENPAR condition CLOSEPAR

State 89:
          method_call ::= RANDOM * OPENPAR condition CLOSEPAR

                       OPENPAR shift        13     

State 90:
          method_call ::= SOR OPENPAR * CLOSEPAR

                      CLOSEPAR shift-reduce 42     method_call ::= SOR OPENPAR CLOSEPAR

State 91:
          method_call ::= SOR * OPENPAR CLOSEPAR

                       OPENPAR shift        90     

State 92:
          method_call ::= SOPLN * OPENPAR arguments CLOSEPAR

                       OPENPAR shift        2      

State 93:
          method_call ::= SOP * OPENPAR arguments CLOSEPAR

                       OPENPAR shift        3      

State 94:
          lvalue ::= ID OPENBRA condition * CLOSEBRA

                      CLOSEBRA shift-reduce 59     lvalue ::= ID OPENBRA condition CLOSEBRA

State 95:
          statement ::= KWRETURN condition * SEMICOLON

                     SEMICOLON shift-reduce 33     statement ::= KWRETURN condition SEMICOLON

State 96:
          statement ::= method_call * SEMICOLON

                     SEMICOLON shift-reduce 30     statement ::= method_call SEMICOLON

State 97:
          statement ::= assign * SEMICOLON

                     SEMICOLON shift-reduce 29     statement ::= assign SEMICOLON

State 98:
          sub_program ::= method_type ID * OPENPAR params CLOSEPAR block

                       OPENPAR shift        35     

State 99:
          sub_program ::= method_type * ID OPENPAR params CLOSEPAR block

                            ID shift        98     

State 100:
      (0) program ::= KWCLASS ID OPENCUR field_decl methods_field CLOSECUR *

                             $ reduce       0      program ::= KWCLASS ID OPENCUR field_decl methods_field CLOSECUR

State 101:
          program ::= KWCLASS ID * OPENCUR field_decl methods_field CLOSECUR

                       OPENCUR shift        29     

State 102:
          program ::= KWCLASS * ID OPENCUR field_decl methods_field CLOSECUR

                            ID shift        101    

----------------------------------------------------
Symbols:
    0: $:
    1: KWCLASS
    2: ID
    3: OPENCUR
    4: CLOSECUR
    5: SEMICOLON
    6: COMMA
    7: OPENBRA
    8: NUMBER
    9: CLOSEBRA
   10: KWINT
   11: KWBOOL
   12: OPASSIGN
   13: KWTRUE
   14: KWFALSE
   15: OPENPAR
   16: CLOSEPAR
   17: KWVOID
   18: KWRETURN
   19: KWBREAK
   20: KWCONTINUE
   21: SOP
   22: SOPLN
   23: SOR
   24: RANDOM
   25: KWIF
   26: KWELSE
   27: KWWHILE
   28: KWFOR
   29: STRLIT
   30: AND
   31: OR
   32: MAYOR
   33: MENOR
   34: MAYORIGUAL
   35: MENORIGUAL
   36: IGUAL
   37: DISTINTO
   38: SUMA
   39: RESTA
   40: MUL
   41: DIV
   42: MOD
   43: NEGAR
   44: error:
   45: program: KWCLASS
   46: field_decl: <lambda> KWINT KWBOOL
   47: methods_field: <lambda> KWINT KWBOOL KWVOID
   48: decl: KWINT KWBOOL
   49: type: KWINT KWBOOL
   50: list_decl: ID
   51: init: <lambda> OPASSIGN
   52: constant: NUMBER KWTRUE KWFALSE
   53: sub_program: KWINT KWBOOL KWVOID
   54: method_type: KWINT KWBOOL KWVOID
   55: params: <lambda> COMMA KWINT KWBOOL
   56: block: OPENCUR
   57: statements: <lambda> ID KWRETURN KWBREAK KWCONTINUE SOP SOPLN SOR RANDOM KWIF KWWHILE KWFOR
   58: statement: ID KWRETURN KWBREAK KWCONTINUE SOP SOPLN SOR RANDOM KWIF KWWHILE KWFOR
   59: assign: ID
   60: method_call: ID SOP SOPLN SOR RANDOM
   61: if_st: KWIF
   62: while: KWWHILE
   63: condition: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   64: for_st: KWFOR
   65: lvalue: ID
   66: exprs_list: <lambda> ID COMMA NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   67: arguments: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM STRLIT RESTA NEGAR
   68: opt_else: <lambda> KWELSE
   69: list_asignings: ID
   70: argument: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM STRLIT RESTA NEGAR
   71: logic_expr: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   72: aritexpr: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   73: term: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   74: factor: ID NUMBER KWTRUE KWFALSE OPENPAR SOP SOPLN SOR RANDOM RESTA NEGAR
   75: unary: <lambda> RESTA NEGAR
